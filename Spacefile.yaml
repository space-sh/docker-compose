#
# Copyright 2017 Blockie AB
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
_clone:
    @clone: os docker string
    @include: os|/_clone/
    @include: docker|/_clone/
    @include: string|/_clone/
@include: |/_clone/

_info:
    title: Docker Compose management.

_dep_install:
    _info:
        title: Install the latest Docker Engine and Compose
        desc: |
            Downloads and installs the latest Docker Engine and Compose from Docker.
            Also adds the "targetuser" to the docker group.
    _env:
        - targetuser:
            value: ${targetuser:-$USER}
        - composeversion:
            value: ${composeversion:-1.9.0}
            values:
                - 1.9.0
        - RUN: DOCKER_COMPOSE_DEP_INSTALL -- "${targetuser}" "${composeversion}"

install:
    _info:
        title: Install the latest Docker Compose
        desc: |
            Downloads and installs the latest Docker Compose.
            Will reinstall if already installed.
    _env:
        - composeversion:
            title: What version of Compose to install, leave blank for default.
            value: ${composeversion:-1.9.0}
            values:
                - 1.9.0
        - SPACE_ARGS:
            arguments:
                -
                    values:
                        - 1.9.0
        - RUN: DOCKER_COMPOSE_INSTALL -- "${composeversion}"

_shebang:
    _info:
        title: Handle shebang invocations
        desc: |
            In a docker-compose.yaml file you could put
            For Linux:
                #!/usr/bin/space -m docker-compose /_shebang/
            For OSX/BSD
                #!/usr/bin/env space ! -m docker-compose /_shebang/ !
            as the first line to make the yaml file itself runnable.
            Remember to chmod +x it.
    _env:
        - RUN: DOCKER_COMPOSE_SHEBANG

up:
    _info:
        title: Deploy services using docker-compose
        desc: |
            Launch services using "docker-compose".
    _env:
        - composefile:
            title: The Docker Compose file
            completion: G
        - composename:
            title: The optional name of the composition.
            desc: If not given then the name will be derived from the composefile.
        - SPACE_ARGS:
            arguments:
                -
                    title: Compose file
                    completion: G
                -
                    title: Name
                    values:
                        - name
        - RUN: DOCKER_COMPOSE_UP -- "${composefile}" "${composename}"

down:
    _info:
        title: Un-deploy services using docker-compose
    _env:
        - composefile:
            title: The Docker Compose file
            completion: G
        - composename:
            title: The optional name of the composition.
            desc: If not given then the name will be derived from the composefile.
        - SPACE_ARGS:
            arguments:
                -
                    title: Compose file
                    completion: G
                -
                    title: Name
                    values:
                        - name
        - RUN: DOCKER_COMPOSE_DOWN -- "${composefile}" "${composename}"

ps:
    _info:
        title: Get status of services using docker-compose
    _env:
        - composefile:
            title: The Docker Compose file
            completion: G
        - composename:
            title: The optional name of the composition.
            desc: If not given then the name will be derived from the composefile.
        - SPACE_ARGS:
            arguments:
                -
                    title: Compose file
                    completion: G
                -
                    title: Name
                    values:
                        - name
        - RUN: DOCKER_COMPOSE_PS -- "${composefile}" "${composename}"
rm:
    _info:
        title: Remove all services using docker-compose
    _env:
        - composefile:
            title: The Docker Compose file
            completion: G
        - composename:
            title: The optional name of the composition.
            desc: If not given then the name will be derived from the composefile.
        - SPACE_ARGS:
            arguments:
                -
                    title: Compose file
                    completion: G
                -
                    title: Name
                    values:
                        - name
        - RUN: DOCKER_COMPOSE_RM -- "${composefile}" "${composename}"

pull:
    _info:
        title: Pull all service images using docker-compose
    _env:
        - composefile:
            title: The Docker Compose file
            completion: G
        - composename:
            title: The optional name of the composition.
            desc: If not given then the name will be derived from the composefile.
        - SPACE_ARGS:
            arguments:
                -
                    title: Compose file
                    completion: G
                -
                    title: Name
                    values:
                        - name
        - RUN: DOCKER_COMPOSE_PULL -- "${composefile}" "${composename}"

logs:
    _info:
        title: Get logs of services using docker-compose
    _env:
        - composefile:
            title: The Docker Compose file
            completion: G
        - composename:
            title: The optional name of the composition.
            desc: If not given then the name will be derived from the composefile.
        - SPACE_ARGS:
            arguments:
                -
                    title: Compose file
                    completion: G
                -
                    title: Name
                    values:
                        - name
        - RUN: DOCKER_COMPOSE_LOGS -- "${composefile}" "${composename}"

enter:
    @prefix: @{PARENTPATH}
    @dotdot: prefix
    _info:
        title: Enter with a shell into a running container
        desc: |
            Set variable composename to have auto
            completion be filtered on that.
    _env:
        - composename:
            title: The prefix for filtering container names.
        - container:
            completion: @{prefix}_list/
        - shell:
            title: Shell to enter container with, defaults to sh
            values:
                - sh
                - bash
        - SPACE_ARGS:
            arguments:
                -
                    completion: @{prefix}_list/
                -
                    values:
                        - sh
                        - bash
        - RUN: DOCKER_ENTER -- "${container}" "${shell}"

exec:
    @prefix: @{PARENTPATH}
    @dotdot: prefix
    _info:
        title: Exec command in service using docker
        desc: |
            Set variable composename to have auto
            completion be filtered on that.
    _env:
        - composename:
            title: The prefix for filtering container names.
        - container:
            completion: @{prefix}_list/
        - flags:
            value: ${flags--ti}
        - cmd:
            desc: Command to execute inside container which will execute the RUN variable, leave blank for default.
        - args:
            title: Arguments to pass to shell, leave blank for interactive shell.
        - SPACE_ARGS:
            arguments:
                -
                    completion: @{prefix}_list/
                -
                    values:
                        - "-ti"
                -
                    values:
                        - cmd
                -
                    values:
                        - arguments
        - RUN: DOCKER_EXEC -- "${container}" "${flags}" "${cmd}" "${args}"

_list:
    @include: docker|/ps/
    _env:
        - SPACE_ARGS: --format "{{.Names}}" -|
        - SPACE_REDIR: "|grep \"^${composename-}\" 2>/dev/null"
        - SPACE_MUTE_EXIT: 1
        - SPACE_LOG_LEVEL: 0
...
